package ${package.Controller};


import com.fawkes.core.base.api.ApiResponseBody;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import lombok.RequiredArgsConstructor;
import org.springframework.web.bind.annotation.*;

import com.fawkes.segment.trace.common.param.${entity}QParam;
import com.fawkes.segment.trace.service.I${entity}Service;

#if(${restControllerStyle})
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};import javax.annotation.Resource;
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@RequiredArgsConstructor(onConstructor_ = @Autowired)
## swagger相关
#if(${swagger2})
@Api(tags = "${table.comment}")
#end
## controller相关
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
## 请求地址
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
## 类名及进程判断
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    ## 注入服务类
@Resource
    private final ${table.serviceName} service;

    ## 主键类型判断
    #foreach($field in ${table.fields})
        #if(${field.keyFlag})
            ## 主键类型
            #set($idType = ${field.propertyType})
            ## 主键名称
            #set($idName = ${field.propertyName})
            ## 跳出
            #break
        #end
    #end

    @PostMapping(path = "/create", produces = {"application/json;charset=UTF-8"})
    #if(${swagger2})
    @ApiOperation("$!{table.comment}新增")
    #end
    public ApiResponseBody<?> createOne(@Validated @RequestBody ${entity}SaveVO saveVO) {

        return service.add(saveVO);
    }

    @PutMapping(path = "/update", produces = {"application/json;charset=UTF-8"})
    #if(${swagger2})
    @ApiOperation("$!{table.comment}修改")
    #end
    public ApiResponseBody<?> updateOneById(@Validated @RequestBody ${entity}SaveVO saveVO) {

        return service.updateOneById(saveVO);
    }

    @DeleteMapping(path = "/delete", produces = {"application/json;charset=UTF-8"})
    #if(${swagger2})
    @ApiOperation("$!{table.comment}删除")
    #end
    public ApiResponseBody<?> deleteById(@RequestBody BatchParam batchParam) {
        Set<Long> convertIds = batchParam.getConvertIds();
        if (CollUtil.isEmpty(convertIds)) {
            throw new BusinessException("请选择要删除的数据");
        }
        return service.deleteById(convertIds);
    }

    @GetMapping(path = "/get", produces = {"application/json;charset=UTF-8"})
    #if(${swagger2})
    @ApiOperation("$!{table.comment}单条查询")
    @ApiImplicitParam(name = "id", value = "id", required = true)
    #end
    public ApiResponseBody<?> getOneById(@RequestParam(value = "id") Long id) {

        return service.getOneById(id);
    }

    @PostMapping(path = "/list", produces = {"application/json;charset=UTF-8"})
    #if(${swagger2})
    @ApiOperation("$!{table.comment}列表查询")
    #end
    public ApiResponseBody<?> findList(@RequestBody ${entity}QParam qParam) {

        return service.findList(qParam);
    }

    @PostMapping(path = "/page", produces = {"application/json;charset=UTF-8"})
    #if(${swagger2})
    @ApiOperation("$!{table.comment}分页查询")
    #end
    public ApiResponseBody<?> findPage(@RequestBody ${entity}QParam qParam) {

        return service.findPage(qParam);
    }

}

